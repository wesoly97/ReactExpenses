{"version":3,"sources":["components/Input.module.css","components/InputExpense.js","components/LIstExpense.js","components/Navbar.js","App.js","reportWebVitals.js","index.js","App.module.css"],"names":["module","exports","Input","list","setList","useState","text","setText","date","setDate","amount","setAmount","className","type","id","e","target","value","htmlFor","min","step","onChange","format","Date","toISOString","slice","onClick","newExpense","uniqid","length","myList","sort","a","b","M","toast","html","classes","addExpense","List","setSummaryValue","setCountValue","selectedString","selected","setSelected","search","setSearch","dateFrom","setDateFrom","dateTo","setDateTo","amountFrom","setAmountFrom","amountTo","setAmountTo","sum","count","htmlList","filter","item","includes","map","Number","styles","container","label","multiple","options","dropdownOptions","alignment","autoTrigger","closeOnClick","constrainWidth","coverTrigger","hover","inDuration","onCloseEnd","onCloseStart","onOpenEnd","onOpenStart","outDuration","Value","Math","round","Navbar","href","App","summaryValue","countValue","size","eLetter","restLetter","accordion","popout","header","icon","node","xd","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6c04998.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Input_container__39iVm\",\"containerInputs\":\"Input_containerInputs__3wIvu\",\"priority\":\"Input_priority__3eop8\",\"size\":\"Input_size__9hbnl\",\"animation\":\"Input_animation__3SJr_\",\"showUp\":\"Input_showUp__RSW6L\",\"eLetter\":\"Input_eLetter__3TOLM\",\"bop\":\"Input_bop__1MWaL\",\"restLetter\":\"Input_restLetter__1eMg6\",\"bopB\":\"Input_bopB__16oHI\"};","import React, { useState } from \"react\";\r\nimport uniqid from \"uniqid\";\r\nimport M from \"materialize-css\";\r\n\r\nexport default function Input({ list, setList }) {\r\n  const [text, setText] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"\");\r\n\r\n  const addExpense = (text, amount, date) => {\r\n    const newExpense = {\r\n      id: uniqid(),\r\n      text: text,\r\n      amount,\r\n      date,\r\n    };\r\n\r\n    if (text.length > 0 && date.length > 0 && amount.length > 0) {\r\n      const myList = [...list, newExpense];\r\n      myList.sort((a, b) => {\r\n        if (a.date < b.date) {\r\n          return -1;\r\n        }\r\n        if (a.date > b.date) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n      setList(myList);\r\n    } else if (text.length == 0) {\r\n      M.toast({\r\n        html: \"Nie można wpisać wydatku bez nazwy\",\r\n        classes: \"rounded\",\r\n      });\r\n    } else if (amount.length == 0) {\r\n      M.toast({ html: \"Nie można wydatku bez wartości\", classes: \"rounded\" });\r\n    } else {\r\n      M.toast({\r\n        html: \"Nie można dodać wydatku bez podania daty\",\r\n        classes: \"rounded\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"input-field col s12\">\r\n          <i className=\"material-icons prefix\">mode_edit</i>\r\n          <textarea\r\n            type=\"text\"\r\n            id=\"text\"\r\n            className=\"autocomplete materialize-textarea\"\r\n            type=\"text\"\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n          />\r\n          <label htmlFor=\"text\">Expenses</label>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"input-field col s12 xd\">\r\n          <i className=\"material-icons prefix\">attach_money</i>\r\n          <input\r\n            type=\"number\"\r\n            id=\"amount\"\r\n            className=\"autocomplete \"\r\n            min=\"1\"\r\n            step=\"any\"\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n          />\r\n          <label htmlFor=\"amount\">Amount</label>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"input-field col s12\">\r\n          <i className=\"material-icons prefix\">date_range</i>\r\n          <input\r\n            type=\"date\"\r\n            id=\"date1\"\r\n            className=\"datepicker\"\r\n            value={date}\r\n            format=\"dd-MM-yyyy\"\r\n            min={new Date().toISOString().slice(0, 10)}\r\n            onChange={(e) => setDate(e.target.value)}\r\n          />\r\n          <label htmlFor=\"date1\">date:</label>\r\n        </div>\r\n      </div>\r\n\r\n      <button\r\n        className=\"btn waves-effect waves-light brown darken-1\"\r\n        type=\"submit\"\r\n        onClick={() => {\r\n          addExpense(text, amount, date);\r\n          setText(\"\");\r\n          setDate(\"\");\r\n          setAmount(\"\");\r\n        }}\r\n      >\r\n        <i className=\"material-icons right\">send</i> dodaj\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./Input.module.css\";\r\nimport { useState } from \"react\";\r\nimport { Select, TextInput } from \"react-materialize\";\r\nexport default function List({\r\n  list,\r\n  setList,\r\n  setSummaryValue,\r\n  setCountValue,\r\n}) {\r\n  const DeleteALlExpense = () => {\r\n    setList([]);\r\n  };\r\n\r\n  const [selectedString, setSelectedString] = useState(\"\");\r\n  const [selected, setSelected] = useState(true);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [dateFrom, setDateFrom] = useState(\"\");\r\n  const [dateTo, setDateTo] = useState(\"\");\r\n  const [amountFrom, setAmountFrom] = useState(\"\");\r\n  const [amountTo, setAmountTo] = useState(\"\");\r\n  function handleChange(e) {\r\n    if (e.target.value == \"true\") {\r\n      setSelected(true);\r\n      setAmountFrom(\"\");\r\n      setAmountTo(\"\");\r\n    } else {\r\n      setSelected(false);\r\n      setDateFrom(\"\");\r\n      setDateTo(\"\");\r\n    }\r\n  }\r\n  let sum = 0;\r\n  let count = 0;\r\n  const htmlList = list\r\n    .filter((item) => item.text.includes(search))\r\n    .map(({ id, text, amount, date }) => {\r\n      if (selected) {\r\n        if (dateFrom == \"\" && dateTo == \"\") {\r\n          {\r\n            sum = sum + Number(amount);\r\n            count = count + 1;\r\n          }\r\n          return (\r\n            <tr key={id}>\r\n              <td>\r\n                <b>{text}</b>\r\n                <p>{date}</p>\r\n              </td>\r\n              <td>\r\n                <b>{\"$\" + amount}</b>\r\n              </td>\r\n            </tr>\r\n          );\r\n        } else if (dateFrom <= date && dateTo >= date) {\r\n          {\r\n            sum = sum + Number(amount);\r\n            count = count + 1;\r\n          }\r\n          return (\r\n            <tr key={id}>\r\n              <td>\r\n                <b>{text}</b>\r\n                <p>{date}</p>\r\n              </td>\r\n              <td>\r\n                <b>{\"$\" + amount}</b>\r\n              </td>\r\n            </tr>\r\n          );\r\n        } else if (dateFrom <= date && dateTo == \"\") {\r\n          {\r\n            sum = sum + Number(amount);\r\n            count = count + 1;\r\n          }\r\n          return (\r\n            <tr key={id}>\r\n              <td>\r\n                <b>{text}</b>\r\n                <p>{date}</p>\r\n              </td>\r\n              <td>\r\n                <b>{\"$\" + amount}</b>\r\n              </td>\r\n            </tr>\r\n          );\r\n        } else if (dateTo >= date && dateFrom == \"\") {\r\n          {\r\n            sum = sum + Number(amount);\r\n            count = count + 1;\r\n          }\r\n          return (\r\n            <tr key={id}>\r\n              <td>\r\n                <b>{text}</b>\r\n                <p>{date}</p>\r\n              </td>\r\n              <td>\r\n                <b>{\"$\" + amount}</b>\r\n              </td>\r\n            </tr>\r\n          );\r\n        }\r\n      } else {\r\n        if (amountFrom == \"\" && amountTo == \"\") {\r\n          {\r\n            sum = sum + Number(amount);\r\n            count = count + 1;\r\n          }\r\n          return (\r\n            <tr key={id}>\r\n              <td>\r\n                <b>{text}</b>\r\n                <p>{date}</p>\r\n              </td>\r\n              <td>\r\n                <b>{\"$\" + amount}</b>\r\n              </td>\r\n            </tr>\r\n          );\r\n        } else if (\r\n          Number(amountFrom) <= Number(amount) &&\r\n          Number(amountTo) >= Number(amount)\r\n        ) {\r\n          {\r\n            sum = sum + Number(amount);\r\n            count = count + 1;\r\n          }\r\n          return (\r\n            <tr key={id}>\r\n              <td>\r\n                <b>{text}</b>\r\n                <p>{date}</p>\r\n              </td>\r\n              <td>\r\n                <b>{\"$\" + amount}</b>\r\n              </td>\r\n            </tr>\r\n          );\r\n        } else if (Number(amountFrom) <= Number(amount) && amountTo == \"\") {\r\n          {\r\n            sum = sum + Number(amount);\r\n            count = count + 1;\r\n          }\r\n          return (\r\n            <tr key={id}>\r\n              <td>\r\n                <b>{text}</b>\r\n                <p>{date}</p>\r\n              </td>\r\n              <td>\r\n                <b>{\"$\" + amount}</b>\r\n              </td>\r\n            </tr>\r\n          );\r\n        } else if (Number(amountTo) >= Number(amount) && amountFrom == \"\") {\r\n          {\r\n            sum = sum + Number(amount);\r\n            count = count + 1;\r\n          }\r\n          return (\r\n            <tr key={id}>\r\n              <td>\r\n                <b>{text}</b>\r\n                <p>{date}</p>\r\n              </td>\r\n              <td>\r\n                <b>{\"$\" + amount}</b>\r\n              </td>\r\n            </tr>\r\n          );\r\n        }\r\n      }\r\n    });\r\n\r\n  if (!list.length) {\r\n    return (\r\n      <div>\r\n        <div className={styles.container}>\r\n          <h5>No expenses to show! click on \"Add Expense\" button to add new!</h5>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <div className={styles.container}>\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s3 \">\r\n              <TextInput\r\n                id=\"TextInput-4\"\r\n                label=\"Search Expenses\"\r\n                value={search}\r\n                onChange={(e) => setSearch(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"input-field col s3\">\r\n              <Select\r\n                id=\"Select\"\r\n                multiple={false}\r\n                options={{\r\n                  classes: \"\",\r\n                  dropdownOptions: {\r\n                    alignment: \"left\",\r\n                    autoTrigger: true,\r\n                    closeOnClick: true,\r\n                    constrainWidth: true,\r\n                    coverTrigger: true,\r\n                    hover: false,\r\n                    inDuration: 150,\r\n                    onCloseEnd: null,\r\n                    onCloseStart: null,\r\n                    onOpenEnd: null,\r\n                    onOpenStart: null,\r\n                    outDuration: 250,\r\n                  },\r\n                }}\r\n                value={selectedString}\r\n                onChange={handleChange}\r\n              >\r\n                <option selected Value=\"true\">DATE</option>\r\n                <option value=\"false\">AMOUNT</option>\r\n              </Select>\r\n            </div>\r\n            <div className=\"input-field col s6\">\r\n              {selected ? (\r\n                <div>\r\n                  <div className=\"input-field col s6\">\r\n                    <input\r\n                      type=\"date\"\r\n                      id=\"date11\"\r\n                      className=\"datepicker\"\r\n                      value={dateFrom}\r\n                      format=\"dd-MM-yyyy\"\r\n                      onChange={(e) => setDateFrom(e.target.value)}\r\n                    />\r\n                    <label htmlFor=\"date11\">DATE FROM:</label>\r\n                  </div>\r\n                  <div className=\"input-field col s6\">\r\n                    <input\r\n                      type=\"date\"\r\n                      id=\"date12\"\r\n                      className=\"datepicker\"\r\n                      value={dateTo}\r\n                      format=\"dd-MM-yyyy\"\r\n                      min={dateFrom}\r\n                      onChange={(e) => setDateTo(e.target.value)}\r\n                    />\r\n                    <label htmlFor=\"date12\">DATE TO:</label>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <div className=\"input-field col s6\">\r\n                    <input\r\n                      type=\"number\"\r\n                      id=\"amount1\"\r\n                      className=\"autocomplete \"\r\n                      min=\"1\"\r\n                      step=\"any\"\r\n                      value={amountFrom}\r\n                      onChange={(e) => setAmountFrom(e.target.value)}\r\n                    />\r\n                    <label htmlFor=\"amount1\">Amount FROM:</label>\r\n                  </div>\r\n\r\n                  <div className=\"input-field col s6\">\r\n                    <input\r\n                      type=\"number\"\r\n                      id=\"amount2\"\r\n                      className=\"autocomplete \"\r\n                      min={amountFrom}\r\n                      step=\"any\"\r\n                      value={amountTo}\r\n                      onChange={(e) => setAmountTo(e.target.value)}\r\n                    />\r\n                    <label htmlFor=\"amount2\">Amount TO:</label>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <h5>\r\n            <a\r\n              className=\"btn-floating btn-small waves-effect waves-light red\"\r\n              onClick={() => DeleteALlExpense()}\r\n            >\r\n              <i className=\"material-icons\">delete_sweep</i>\r\n            </a>\r\n          </h5>\r\n\r\n          <table className=\"centered\">\r\n            <thead className=\"grey lighten-4\">\r\n              <tr>\r\n                <th>Expense</th>\r\n\r\n                <th>Amount</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{htmlList}</tbody>\r\n            {setSummaryValue(Math.round(sum * 100) / 100)}\r\n            {setCountValue(count)}\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport './Navbar.css'\r\nconst Navbar = () => {\r\n    return(\r\n        <div className=\"row\">\r\n\r\n            <nav>\r\n                <div className=\"nav-wrapper grey darken-3\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row navRow\">\r\n                            <div className=\"col s1\">\r\n                                <a href=\"/ReactExpenses/\" className=\"brand-logo\">E-EXPENSE</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default  Navbar","import { useState } from \"react\";\r\nimport Input from \"./components/InputExpense\";\r\nimport styles from \"./App.module.css\";\r\nimport List from \"./components/LIstExpense\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport { Collapsible, CollapsibleItem, Icon } from \"react-materialize\";\r\n\r\nfunction App() {\r\n  const [list, setList] = useState([]);\r\n  const [summaryValue, setSummaryValue] = useState(0);\r\n  const [countValue, setCountValue] = useState(0);\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar />\r\n      <h1 className={styles.size}>\r\n        <span className={styles.eLetter}>E-</span>\r\n        <span className={styles.restLetter}>EXPENSE</span>\r\n      </h1>\r\n      <div className={styles.container}>\r\n        <div className=\"row\">\r\n          <div className=\"input-field col l12 m12 s12\">\r\n            <h3>\r\n              Viewing {countValue} expenses totaling ${summaryValue}\r\n            </h3>\r\n            <div className=\"input-field col l4 m12 s12\">\r\n              <Collapsible accordion popout>\r\n                <CollapsibleItem\r\n                  header=\"Add expense\"\r\n                  icon={<Icon>attach_money</Icon>}\r\n                  node=\"show\"\r\n                >\r\n                  <div className={styles.xd} node=\"show\">\r\n                    <Input list={list} setList={setList} />\r\n                  </div>\r\n                </CollapsibleItem>\r\n              </Collapsible>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <List\r\n        list={list}\r\n        setList={setList}\r\n        setSummaryValue={setSummaryValue}\r\n        setCountValue={setCountValue}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1GxPK\",\"animation\":\"App_animation__2wdDV\",\"showUp\":\"App_showUp__215aJ\",\"eLetter\":\"App_eLetter__3ZhIN\",\"bop\":\"App_bop__1rXsT\",\"size\":\"App_size__2UhQe\",\"restLetter\":\"App_restLetter__3Vxid\",\"bopB\":\"App_bopB__2pLS2\",\"container\":\"App_container__1Uc9-\"};"],"sourceRoot":""}